@page "/Error"
@using System.Diagnostics
@inject NavigationManager NavigationManager

<PageTitle>Error</PageTitle>

<h1 class="text-danger">Seite nicht gefunden</h1>
<h2 class="text-danger">Die angeforderte Seite existiert nicht.</h2>

<button @onclick="NavigateToHome" class="btn btn-primary">Zurück zur Hauptseite</button>

@if (ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@RequestId</code>
    </p>
}

<h3>Entwicklungsmodus</h3>
<p>
    Wechseln zum <strong>Entwicklungs</strong>-Modus zeigt detailliertere Informationen über den aufgetretenen Fehler an.
</p>
<p>
    <strong>Der Entwicklungsmodus sollte nicht für bereitgestellte Anwendungen aktiviert sein.</strong>
    Dies kann dazu führen, dass sensible Informationen von Ausnahmen an Endbenutzer angezeigt werden.
    Für lokales Debugging, aktiviere den <strong>Entwicklungs</strong>-Modus, indem du die <strong>ASPNETCORE_ENVIRONMENT</strong>-Umgebungsvariable auf <strong>Development</strong> setzt
    und die App neu startest.
</p>

@code {
    [CascadingParameter]
    private HttpContext? HttpContext { get; set; }

    private string? RequestId { get; set; }
    private bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

    protected override void OnInitialized() =>
        RequestId = Activity.Current?.Id ?? HttpContext?.TraceIdentifier;

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
