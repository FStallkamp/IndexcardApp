@page "/learn/{CategoryName?}"
@inject NavigationManager NavigationManager
@using System.Net.Http.Json
@rendermode InteractiveServer
@inject HttpClient httpClient
@using MudBlazor

<MudContainer MaxWidth="MaxWidth.Medium" Style="margin-top: 2rem;">
    <MudText Typo="Typo.h6" Align="Align.Right" Style="font-size: 1.2rem; color: #6c757d;">
        @if (CategoryName == "all")
        {
            <text>Lernt alle KarteiKarten</text>
        }
        else
        {
            <text>Kategorie @CategoryName</text>
        }
    </MudText>

    @if (CategoryName == "all")
    {
        <MudText Typo="Typo.h6" Align="Align.Right" Style="margin-top: 0.5rem; font-size: 1.0rem; color: #28a745;">
            @if (currentCard != null)
            {
                <text>Momentane Kategorie: <u>@currentCategoryName</u></text>
            }
        </MudText>
    }

    <MudText Typo="Typo.h6" Align="Align.Right" Style="margin-top: 0.5rem; font-size: 1.0rem; color: #28a745;">
        <text>Du musst noch @cardCounter Karten lernen</text>
    </MudText>

    <MudPaper Style="padding: 2rem; margin-top: 1rem;">
        @if (cardCounter != 0)
        {
            @if (StepTwo)
            {
                <MudText Typo="Typo.h4">Titel der Karte:</MudText>
                <MudText Typo="Typo.h5"><text>@(SplitAt(currentCard.Name, 42, 52))</text></MudText>
                <MudDivider Style="margin: 1rem 0;" />
                <MudText Typo="Typo.h5">Korrekte Lösung:</MudText>
                <MudText Typo="Typo.h5" Style="color: #28a745;"><text>@(SplitAt(currentCard.Description, 42, 52))</text></MudText>
                <MudDivider Style="margin: 1rem 0;" />
                <MudTextField T="string" Disabled Label="Keine Eingabe" Variant="Variant.Filled" Size="Size.Large" @bind-Value="inputUser" AutoGrow />
                <MudDivider Style="margin: 1rem 0;" />
                <MudButton Color="Color.Success" Variant="Variant.Filled" Size="Size.Large" OnClick="@(() => CorrectAnswer(currentCard))">
                    Richtig
                </MudButton>
                <MudButton Style="margin-left: 1rem;" Color="Color.Error" Variant="Variant.Filled" Size="Size.Large" OnClick="WrongAnswer">
                    Falsch
                </MudButton>
            }
            else
            {
                <MudText Typo="Typo.h4">Titel der Karte:</MudText>
                <MudText Typo="Typo.h5"><text>@(SplitAt(currentCard.Name, 42, 52))</text></MudText>
                <MudDivider Style="margin: 1rem 0;" />
                <MudTextField T="string" Typo="Typo.h5" Label="Deine Lösung" Variant="Variant.Filled" Size="Size.Large" @bind-Value="inputUser" AutoGrow />
                <MudDivider Style="margin: 1rem 0;" />
                <MudButton Color="Color.Inherit" Variant="Variant.Filled" Size="Size.Large" OnClick="@(() => StartStepTwo(randomOrder))">
                    Weiter
                </MudButton>
            }
        }
        else
        {
            <MudText Typo="Typo.h5" Align="Align.Left">
                @if (CategoryName == "all")
                {
                    <text>Du hast erfolgreich alle Karten gelernt</text>
                }
                else
                {
                    <text>Du hast erfolgreich alle Karten der Kategorie @CategoryName gelernt</text>
                }
            </MudText>
            <MudButton Color="Color.Success" Variant="Variant.Filled" Size="Size.Large" Href="/">
                Zurück zur Homepage
            </MudButton>
        }
    </MudPaper>
</MudContainer>

@code {
    public MarkupString SplitAt(string str, int interval, int maxInterval)
    {
        if (string.IsNullOrEmpty(str) || interval <= 0 || maxInterval <= 0)
            return new MarkupString(str);

        var result = new List<string>();
        int start = 0;

        while (start < str.Length)
        {
            int end = Math.Min(start + interval, str.Length);
            int nextSpace = str.IndexOf(' ', end);

            if (nextSpace == -1 || nextSpace > start + maxInterval)
            {
                nextSpace = Math.Min(start + maxInterval, str.Length);
            }

            result.Add(str.Substring(start, nextSpace - start));
            start = nextSpace + 1;
        }

        return new MarkupString(string.Join("<br />", result));
    }
}
